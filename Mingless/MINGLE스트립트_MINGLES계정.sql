DROP TABLE POST CASCADE CONSTRAINTS;
DROP SEQUENCE SEQ_POST;
DROP TABLE ITEM CASCADE CONSTRAINTS; 
DROP SEQUENCE SEQ_ICA;
DROP TABLE ITEMCATEGORY CASCADE CONSTRAINTS; 
DROP SEQUENCE SEQ_ITEM ;
DROP TABLE ATTACHMENT CASCADE CONSTRAINTS;
DROP SEQUENCE SEQ_ATT;

-- 첨부파일
-- ATTACHMENT 테이블

CREATE TABLE ATTACHMENT(
    FILE_NO NUMBER CONSTRAINT ATTACHMENT_PK PRIMARY KEY,
    ORIGIN_NAME VARCHAR2(255) CONSTRAINT ATTACHMENT_ORIGIN_NAME_NN NOT NULL,
    CHANGE_NAME VARCHAR2(255) CONSTRAINT ATTACHMENT_CHANGE_NAME_NN NOT NULL,
    FILE_PATH VARCHAR2(1000) CONSTRAINT ATTACHMENT_FILE_PATH_NN NOT NULL,
    UPLOAD_DATE DATE DEFAULT SYSDATE CONSTRAINT ATTACHMENT_UPLOAD_DATE_NN NOT NULL,
    FILE_POSITION NUMBER CONSTRAINT ATTACHMENT_FILE_POSITION_NN NOT NULL,
    FILE_STATUS VARCHAR2(1) DEFAULT 'Y' CONSTRAINT ATTACHMENT_FILE_STATUS_NN NOT NULL
);

COMMENT ON COLUMN ATTACHMENT.FILE_NO IS '첨부파일고유번호';
COMMENT ON COLUMN ATTACHMENT.ORIGIN_NAME IS '파일원본명';
COMMENT ON COLUMN ATTACHMENT.CHANGE_NAME IS '파일수정명';
COMMENT ON COLUMN ATTACHMENT.FILE_PATH IS '저장폴더경로';
COMMENT ON COLUMN ATTACHMENT.UPLOAD_DATE IS '업로드일';
COMMENT ON COLUMN ATTACHMENT.FILE_POSITION IS '게시글 1''/채팅 2''/아이템 3''/음악 4''/미니홈피 5';
COMMENT ON COLUMN ATTACHMENT.FILE_STATUS IS '파일있음''Y'' | 파일없음''N''';

-- ATTACHMENT 시퀀스
CREATE SEQUENCE SEQ_ATT
START WITH 1
NOCACHE;

-- /resources/item_upfiles/
INSERT INTO ATTACHMENT (FILE_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, UPLOAD_DATE, FILE_POSITION, FILE_STATUS)
VALUES (SEQ_ATT.NEXTVAL, 'storeItem.png', 'storeItem.png', '/resources/item_upfiles/', SYSDATE, 3, 'Y');

INSERT INTO ATTACHMENT (FILE_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, UPLOAD_DATE, FILE_POSITION, FILE_STATUS)
VALUES (SEQ_ATT.NEXTVAL, '게시글사진.webp', '게시글사진.webp', '/resources/item_upfiles/', SYSDATE, 1, 'Y');

commit;

 -- ITEMCATEGORY 테이블
CREATE TABLE ITEMCATEGORY(
ITEM_CATEGORY VARCHAR2(30) CONSTRAINT ITEMCATEGORY_PK PRIMARY KEY,
CATEGORYNAME VARCHAR2(40) CONSTRAINT ITEMCATEGORY_NAME_NN NOT NULL
);
-- SEQ_ICA 시퀀스
CREATE SEQUENCE SEQ_ICA
START WITH 1
NOCACHE;
 
 
-- ITEM 테이블
CREATE TABLE ITEM(
ITEM_NUM NUMBER CONSTRAINT ITEM_PK PRIMARY KEY,
ITEM_CATEGORY VARCHAR2(30) CONSTRAINT ITEM_ITEM_CATEGORY_FK REFERENCES ITEMCATEGORY(ITEM_CATEGORY),
ITEM_NAME VARCHAR2(50) CONSTRAINT ITEM_NAME_NN NOT NULL,
PRICE NUMBER CONSTRAINT ITEM_PRICE_NN NOT NULL,
ITEM_INTRO VARCHAR2(4000) CONSTRAINT ITEM_INTRO_NN NOT NULL,
ITEM_DATE DATE DEFAULT SYSDATE CONSTRAINT ITEM_DATE_NN NOT NULL,
ITEM_UPDATE DATE DEFAULT SYSDATE CONSTRAINT ITEM_UPDATE_NN NOT NULL,
ITEM_STATUS CHAR(1) CONSTRAINT ITEM_STATUS_NN NOT NULL,
ATTACHMENT_NO NUMBER CONSTRAINT ITEM_ATTACHMENT_FK REFERENCES ATTACHMENT(FILE_NO)
);
-- SEQ_ITEM 시퀀스
CREATE SEQUENCE SEQ_ITEM
START WITH 1
NOCACHE;

--ITEMCATEGORY 테이블 샘플 데이터
INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC1', '홈피꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC2', '내방꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC3', '아바타꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC4', '아이템광장');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC5', '벽지꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC6', '바닥꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC7', '테마꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC8', '헤어꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC9', '표정꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC10', '상의꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC11', '하의꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC12', '신발꾸미기');

INSERT INTO ITEMCATEGORY (ITEM_CATEGORY, CATEGORYNAME)
VALUES ('IC13', '삭제아이템');

commit;
--ITEM 테이블 샘플 데이터
INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 1', 100, 'Introduction to Item 1', SYSDATE, SYSDATE, 'Y' ,1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC2', 'Item 2', 200, 'Introduction to Item 2', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC3', 'Item 3', 300, 'Introduction to Item 3', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC4', 'Item 4', 400, 'Introduction to Item 4', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 5', 500, 'Introduction to Item 5', SYSDATE, SYSDATE, 'Y', 1);
 
   
INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 1', 100, 'Introduction to Item 1', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS. ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC2', 'Item 2', 100, 'Introduction to Item 2', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC3', 'Item 3', 100, 'Introduction to Item 3', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC4', 'Item 4', 100, 'Introduction to Item 4', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 5', 100, 'Introduction to Item 5', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC2', 'Item 6', 100, 'Introduction to Item 6', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC3', 'Item 7', 100, 'Introduction to Item 7', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC4', 'Item 8', 100, 'Introduction to Item 8', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 9', 100, 'Introduction to Item 9', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC2', 'Item 10', 100, 'Introduction to Item 10', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC3', 'Item 11', 100, 'Introduction to Item 11', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC4', 'Item 12', 100, 'Introduction to Item 12', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 13', 100, 'Introduction to Item 13', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC2', 'Item 14', 100, 'Introduction to Item 14', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC3', 'Item 15', 100, 'Introduction to Item 15', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC4', 'Item 16', 100, 'Introduction to Item 16', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC1', 'Item 17', 100, 'Introduction to Item 17', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC2', 'Item 18', 100, 'Introduction to Item 18', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC3', 'Item 19', 100, 'Introduction to Item 19', SYSDATE, SYSDATE, 'Y', 1);

INSERT INTO ITEM (ITEM_NUM, ITEM_CATEGORY, ITEM_NAME, PRICE, ITEM_INTRO, ITEM_DATE, ITEM_UPDATE, ITEM_STATUS, ATTACHMENT_NO)
VALUES (SEQ_ITEM.NEXTVAL, 'IC4', 'Item 20', 100, 'Introduction to Item 20', SYSDATE, SYSDATE, 'Y', 1);   
 
-- CREATE BLACKLIST TABLE 
DROP TABLE POST_BLACKLIST;
DROP SEQUENCE SEQ_POSTBLACKLIST;

CREATE TABLE POST_BLACKLIST (
    POST_BLACKLIST_NO NUMBER NOT NULL, -- 블랙리스트 고유번호 (Primary Key)
    POST_NO NUMBER NOT NULL, -- 회원 고유번호 (Foreign Key)
    REPORTMEM_NO NUMBER NOT NULL, -- 신고 회원 고유번호 (Foreign Key)
    BLOCK_TYPE VARCHAR2(500) NOT NULL, -- 회원 블락 사유
    BLOCK_DATE DATE DEFAULT SYSDATE NOT NULL , -- 회원 블락 설정 날짜
    BLOCK_COUNT NUMBER DEFAULT 0 NOT NULL , -- 회원 블락 횟수
    EXPIRY_DATE DATE NOT NULL, -- 블랙리스트 만료일

    -- Primary Key 설정
    CONSTRAINT PK_POST_BLACKLIST PRIMARY KEY (BLACKLIST_NO),
    -- Foreign Key 설정
    CONSTRAINT FK_POST_BLACKLIST FOREIGN KEY (POST_NUM)
        REFERENCES POST (POST_NUM),
    -- Foreign Key 설정 
    CONSTRAINT FK_POST_BLACKLIST_REPORTMEM FOREIGN KEY (REPORTMEM_NO)
        REFERENCES MEMBER (MEM_NO)
);

CREATE SEQUENCE SEQ_BLACKLIST
START WITH 1
NOCACHE;


 -- POST_TYPE테이블
CREATE TABLE POST_TYPE(
POST_TYPE NUMBER CONSTRAINT POST_TYPE_PK PRIMARY KEY,
POST_TYPE_NAME VARCHAR2(40) CONSTRAINT POST_TYPE_NAME_NN NOT NULL
);
-- SEQ_ICA 시퀀스
CREATE SEQUENCE SEQ_PT
START WITH 1
NOCACHE;

INSERT INTO POST_TYPE VALUES(SEQ_PT.NEXTVAL , '사용자 게시글');
INSERT INTO POST_TYPE VALUES(SEQ_PT.NEXTVAL , '공지사항');

commit;

-- CHAT 테이블

DROP TABLE CHAT CASCADE CONSTRAINTS;
DROP SEQUENCE SEQ_CHAT;

CREATE TABLE CHAT (
    CHAT_ID NUMBER NOT NULL,
    FROM_MEMNO NUMBER,
    TO_MEMNO NUMBER,
    CHAT_CONTENT VARCHAR2(4000) NOT NULL,
    CHAT_TIME DATE DEFAULT SYSDATE,
    FOREIGN KEY (FROM_MEMNO) REFERENCES MEMBER(MEM_NO),
    FOREIGN KEY (TO_MEMNO) REFERENCES MEMBER(MEM_NO)
);


COMMENT ON COLUMN CHAT.CHAT_ID IS '채팅창번호';
COMMENT ON COLUMN CHAT.FROM_MEMNO IS '채팅보낸사람';
COMMENT ON COLUMN CHAT.TO_MEMNO IS '채팅받는사람';
COMMENT ON COLUMN CHAT.CHAT_CONTENT IS '채팅내용';
COMMENT ON COLUMN CHAT.CHAT_TIME IS '채팅보낸시간';

INSERT
  INTO CHAT
     (
       CHAT_ID
     , FROM_MEMNO
	 , TO_MEMNO
	 , CHAT_CONTENT
	 )
VALUES
     (
	   15 -- 상대방
     , 4 -- 나
	 , 15 -- 상대방
	 , '관리자가 두개 보낼때 테스트' -- 컨텐츠
	 )
;

INSERT
  INTO CHAT
     (
       CHAT_ID
     , FROM_MEMNO
	 , TO_MEMNO
	 , CHAT_CONTENT
	 )
VALUES
     (
	   4 -- 상대방
     , 15 -- 나
	 , 4 -- 상대방
	 , 'user14가 보낸 내용222' -- 컨텐츠
	 )
;


commit;
SELECT 
       CHAT_ID
     , FROM_MEMNO
     , TO_MEMNO
     , PROFILE_PIC
     , CHAT_CONTENT
     , CHAT_TIME
FROM CHAT
JOIN MEMBER ON (MEM_NO = TO_MEMNO)
WHERE 
      (FROM_MEMNO = 4 AND TO_MEMNO = (SELECT MEM_NO 
                                        FROM MEMBER 
                                       WHERE MEM_ID = 'user14'))
   OR (FROM_MEMNO = (SELECT MEM_NO 
                       FROM MEMBER 
                      WHERE MEM_ID = 'user14') AND TO_MEMNO = 4)
ORDER
   BY CHAT_TIME
   ;
   
INSERT INTO CHAT (
    CHAT_ID,
    FROM_MEMNO,
    TO_MEMNO,
    CHAT_CONTENT
)
VALUES (
    (SELECT MEM_NO FROM MEMBER WHERE MEM_ID = 'user14'), -- CHAT_ID를 위한 자리표시자
    4, -- FROM_MEMNO는 하드코딩된 값
    (SELECT MEM_NO FROM MEMBER WHERE MEM_ID = 'user14'), -- TO_MEMNO를 위한 서브쿼리
    '관리자가 두개 보낼때 테스트2222'
)
;

CREATE TABLE EGGPAYMENT(
PAY_NO NUMBER PRIMARY KEY,
MEM_NO NUMBER NOT NULL,
PRICE NUMBER NOT NULL,
POINT NUMBER NOT NULL,
PAYOPTION VARCHAR2(30) NOT NULL,
PAYDATE DATE DEFAULT SYSDATE NOT NULL,
PAYSTATUS CHAR(1) DEFAULT 'Y' NOT NULL,
CATEGORY VARCHAR2(10) NOT NULL,
FOREIGN KEY (MEM_NO) REFERENCES MEMBER(MEM_NO)
);

CREATE SEQUENCE SEQ_EPNO NOCACHE;

INSERT INTO EGGPAYMENT
          (
            PAY_NO
          , MEM_NO
          , PRICE
          , POINT
          , PAYOPTION
          , CATEGORY
          )
     VALUES
          (
            SEQ_EPNO.NEXTVAL
          , 8
          , 10000
          , 100
          , '간편결제'
          , '본인'
          )
          ;
SELECT SUM(PRICE) PRICE
  FROM EGGPAYMENT
 WHERE EXTRACT(MONTH FROM PAYDATE) = 8
		   AND PAYSTATUS = 'Y'
  ;